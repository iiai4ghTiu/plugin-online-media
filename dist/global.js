(()=>{const{console:t,preferences:e}=iina,n={get exclude(){return e.get("excluded_urls")},get ytdl_path(){return e.get("ytdl_path")},get try_ytdl_first(){return e.get("try_ytdl_first")},get use_manifests(){return e.get("use_manifests")},get rawOptions(){return e.get("raw_options")},get format(){switch(e.get("video_quality")){case"use_max":const t=e.get("max_video_height");return`bestvideo[height<=${t}]+bestaudio/best[height<=${t}]`;case"custom":return e.get("custom_ytdl_format");default:return"bestvideo+bestaudio/best"}}};const{core:s,console:i,http:a,utils:o}=iina;async function r(){try{return await a.download("https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_macos","@data/yt-dlp"),null}catch(t){return t.toString()}}function l(){let t="youtube-dl";const e=[n.ytdl_path,"@data/yt-dlp","yt-dlp","youtube-dl"];for(const n of e)if(o.fileInPath(n)){i.log(`Found youtube-dl; using ${n}`),t=n;break}return t}const{console:d,mpv:p}=iina;new Set(["http","https","ftp","ftps","rtmp","rtmps","rtmpe","rtmpt","rtmpts","rtmpte","data"]);function u(t,e=!1,n=1){const s=e?1e3:1024;if(Math.abs(t)<s)return t+" B";const i=e?["kB","MB","GB","TB","PB","EB","ZB","YB"]:["KiB","MiB","GiB","TiB","PiB","EiB","ZiB","YiB"];let a=-1;const o=10**n;do{t/=s,++a}while(Math.round(Math.abs(t)*o)/o>=s&&a<i.length-1);return t.toFixed(n)+" "+i[a]}const{console:h,global:c,utils:g}=iina,f=[];let m=!1;class y{constructor(t,e,n,s,i,a){this.player=t,this.url=e,this.filename=n,this.destFolder=s,this.ytdl=i,this.format=a,this.status="pending",this.errorMessage=null,this.downloadedBytes=0,this.totalBytes=0,this.eta=null}get dest(){return`${this.destFolder}/${this.filename}`}get args(){const t=[];return t.push("-P",this.destFolder),t.push("--format",this.format),t.push("--progress-template","!!%(progress.downloaded_bytes)s-%(progress.total_bytes)s-%(progress.eta)s"),t.push("--",this.url),t}start(){this.startTime=new Date,g.exec(this.ytdl,this.args,null,(t=>this.onStdout(t)),null).then((t=>{h.log("Download finished"),0===t.status?(this.status="done",c.postMessage(this.player,"downloaded",!0)):(this.status="error",this.errorMessage=t.stderr),F()}),(t=>{this.status="error",this.errorMessage=t.toString(),F()})),this.status="downloading",F()}onStdout(t){if(0===(t=t.trim()).length||!t.startsWith("!!"))return;const[e,n,s]=t.slice(2).split("-");"NA"!==e&&(this.downloadedBytes=parseInt(e)),"NA"!==n&&(this.totalBytes=parseInt(n)),"NA"!==s&&(this.eta=parseInt(s)),m=!0}serialize(){return{url:this.url,filename:this.filename,destFolder:this.destFolder,dest:this.dest,status:this.status,start:this.startTime.toString(),error:this.errorMessage,dl:u(this.downloadedBytes),total:u(this.totalBytes),eta:(t=this.eta,new Date(1e3*t).toISOString().substring(t<3600?14:11,19))};var t}}async function w(t,e){const n=0===(await g.exec("which",["ffmpeg"])).status,s=n?"bestvideo+bestaudio/best":"best";h.log(`FFmpeg found: ${n}; using format: ${s}`);const i=l(),a=(await g.exec(i,["--format",s,"--get-filename",t])).stdout.replaceAll("\n","");h.log(a);const o=new y(e,t,a,"~/Downloads",i,s);f.push(o),o.start()}let{console:b,core:v,global:x,menu:B,standaloneWindow:_,utils:M}=iina;function F(){b.log("updateDownloadsWindow");const t=!f.every((t=>"done"===t.status||"error"===t.status));_.postMessage("update",{active:t,data:f.map((t=>t.serialize()))})}function S(){_.loadFile("downloads.html"),_.setProperty({title:"Downloads",resizable:!0,fullSizeContentView:!1,hideTitleBar:!1}),_.setFrame(320,400),_.onMessage("requestUpdate",(({force:t})=>{(t||m)&&(F(),m=!1)})),_.onMessage("openFile",(({file:t})=>{x.createPlayerInstance({url:t})})),_.onMessage("revealFile",(({file:t})=>{M.exec("open",["-R",t])})),_.open()}B.addItem(B.item("Update yt-dlp...",(async()=>{f.findIndex((t=>"downloading"===t.status||"pending"===t.status))>=0&&M.ask("Please wait until all downloads are finished."),_.simpleMode(),_.setContent('\n    <div class="message">Downloading yt-dlp...</div>\n    <div class="spinner"><div></div><div></div><div></div><div></div></div>'),_.setStyle(`\n  body {\n    user-select: none;\n    pointer-events: none;\n    text-align: center;\n    padding: 20px 10px 10px 10px;\n  }\n  .message {\n    margin-bottom: 6px;\n  }\n  ${I}\n  `),_.setProperty({resizable:!1,fullSizeContentView:!0,hideTitleBar:!0}),_.setFrame(400,112),_.open();let t=await r();t?_.setContent(`Error downloading yt-dlp<br>${t}`):(_.setContent("Updated."),await new Promise((t=>setTimeout(t,1e3))),_.close())}))),B.addItem(B.item("Show Downloads",(async()=>{S()}))),x.onMessage("downloadVideo",(async(t,e)=>{t&&(await w(t.toString(),e),x.postMessage(e,"downloading",!0),S())}));let I="\n.spinner {\n  display: inline-block;\n  position: relative;\n  width: 80px;\n  height: 20px;\n}\n.spinner div {\n  position: absolute;\n  top: 7px;\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n  background: #fff;\n  animation-timing-function: cubic-bezier(0, 1, 1, 0);\n}\n.spinner div:nth-child(1) {\n  left: 28px;\n  animation: spinner1 0.6s infinite;\n}\n.spinner div:nth-child(2) {\n  left: 28px;\n  animation: spinner2 0.6s infinite;\n}\n.spinner div:nth-child(3) {\n  left: 40px;\n  animation: spinner2 0.6s infinite;\n}\n.spinner div:nth-child(4) {\n  left: 52px;\n  animation: spinner3 0.6s infinite;\n}\n@keyframes spinner1 {\n  0% {\n    transform: scale(0);\n  }\n  100% {\n    transform: scale(1);\n  }\n}\n@keyframes spinner3 {\n  0% {\n    transform: scale(1);\n  }\n  100% {\n    transform: scale(0);\n  }\n}\n@keyframes spinner2 {\n  0% {\n    transform: translate(0, 0);\n  }\n  100% {\n    transform: translate(12px, 0);\n  }\n}"})();
//# sourceMappingURL=global.js.map
